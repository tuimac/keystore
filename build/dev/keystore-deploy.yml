apiVersion: v1
kind: Service
metadata:
  name: keystore-web
spec:
  selector:
    app: web
  type: NodePort
  ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30010

---

apiVersion: v1
kind: Service
metadata:
  name: keystore-ap
spec:
  selector:
    app: ap
  type: NodePort
  ports:
    - name: ap
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30088

---

apiVersion: v1
kind: Service
metadata:
  name: keystore-db
spec:
  selector:
    app: db
  ports:
    - name: db
      protocol: TCP
      port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: default
  labels:
    app: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      restartPolicy: Always
      containers:
        - name: web
          imagePullPolicy: IfNotPresent
          image: keystore-web
          ports:
            - containerPort: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ap
  namespace: default
  labels:
    app: ap
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ap
  template:
    metadata:
      labels:
        app: ap
    spec:
      restartPolicy: Always
      containers:
        - name: ap
          imagePullPolicy: IfNotPresent
          image: keystore-ap
          ports:
            - containerPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: default
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      restartPolicy: Always
      containers:
        - name: db
          imagePullPolicy: IfNotPresent
          image: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: keystore
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_DB
              value: keystore
      volumes:
        - name: keystore-persistent-volume
          persistentVolumeClaim:
            claimName: keystore-pvc

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: keystore-pv
  labels:
    volume: keystore
spec:
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  local:
    path: /kubernetes/keystore
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - kubernetes

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keystore-pvc
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
  selector:
    matchLabels:
      volume: keystore
